package com.attendance.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;

@Configuration
@EnableWebSecurity
@EnableGlobalMethodSecurity(prePostEnabled = true)
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/api/auth/**").permitAll()  // Allow access to auth endpoints
                .requestMatchers("/api/professor/**").hasRole("PROFESSOR")  // Restrict access to professor endpoints
                .requestMatchers("/api/user/**").hasRole("USER")  // Restrict access to user endpoints
                .anyRequest().authenticated()  // All other endpoints require authentication
            )
            .csrf().disable()
            .httpBasic();  // Use basic authentication for simplicity
        return http.build();
    }
}