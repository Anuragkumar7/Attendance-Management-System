package com.attendance.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.attendance.entity.User;
import com.attendance.service.UserService;

@RestController
@RequestMapping("/api")
@CrossOrigin(origins = "http://localhost:5173")
public class AuthController {
    @Autowired
    private UserService userService;

    @PostMapping("/signup")
    public Map<String, Object> signup(@RequestBody User user) {
    	 Map<String, Object> response = new HashMap<>();
        User existingUser = userService.findByEmail(user.getEmail());
        if (existingUser != null) {
        	  response.put("success", false);
              response.put("message", "User already exists");
              return response;
        }
        userService.saveUser(user);
        response.put("success", true);
        return response;
    }

    @PostMapping("/login")
    public Map<String, Object> login(@RequestBody User user) {
    	Map<String, Object> response = new HashMap<>();
        User existingUser = userService.findByEmail(user.getEmail());
        if (existingUser != null && existingUser.getPassword().equals(user.getPassword())) {
        	 response.put("success", true);
             response.put("token", "assdhsagdy3232h424hb2jh"); // âœ… You should return a real JWT token here
             return response;
        }
        response.put("success", false);
        response.put("message", "Invalid credentials");
        return response;
    }
}